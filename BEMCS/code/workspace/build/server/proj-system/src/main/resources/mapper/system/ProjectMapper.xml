<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proj.system.mapper.ProjectMapper">
    
    <resultMap type="Project" id="ProjectResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectName"  column="project_name"  />
        <result property="address"      column="address"       />
        <result property="description"  column="description"   />
        <result property="createBy"     column="create_by"     />
        <result property="createTime"   column="create_time"   />
        <result property="updateBy"     column="update_by"     />
        <result property="updateTime"   column="update_time"   />
    </resultMap>

    <sql id="selectProjectVo">
        select project_id, project_name, address, description, create_by, create_time, update_by, update_time
        from biz_project
    </sql>

    <select id="selectProjectList" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>
            <if test="projectName != null and projectName != ''">
                AND project_name like concat('%', #{projectName}, '%')
            </if>
            <if test="address != null and address != ''">
                AND address like concat('%', #{address}, '%')
            </if>
        </where>
    </select>
    
    <select id="selectProjectById" parameterType="Long" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where project_id = #{projectId}
    </select>
    
    <select id="checkProjectNameUnique" parameterType="String" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where project_name = #{projectName} limit 1
    </select>
    
    <insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="projectId">
        insert into biz_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectName != null">project_name,</if>
            <if test="address != null">address,</if>
            <if test="description != null">description,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectName != null">#{projectName},</if>
            <if test="address != null">#{address},</if>
            <if test="description != null">#{description},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateProject" parameterType="Project">
        update biz_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectName != null">project_name = #{projectName},</if>
            <if test="address != null">address = #{address},</if>
            <if test="description != null">description = #{description},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where project_id = #{projectId}
    </update>

    <delete id="deleteProjectByIds" parameterType="Long">
        delete from biz_project where project_id in 
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </delete>
</mapper> 